name: Curl-er

on:
  workflow_call:
    inputs:
      directory:
        required: true
        type: string
      githubUser:
        required: true
        type: string
      githubRepo:
        required: true
        type: string
      artifact:
        required: true
        type: string
      version_prefix_to_remove:
        required: false
        type: string

jobs:
  get-artifact:
    runs-on: ubuntu-latest
    outputs:
      artifact: ${{ steps.get-artifact.outputs.artifact }}
      package-name: ${{ steps.get-artifact.outputs.package-name }}
    steps:
      - name: Install Dependencies
        run: |
            sudo apt-get install -y curl

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Get Artifact
        id: get-artifact
        run: |
          PREFIX_TO_REMOVE=${{ inputs.version_prefix_to_remove }}
          LATEST_VERSION=$(curl -s https://api.github.com/repos/${{ inputs.githubUser }}/${{ inputs.githubRepo }}/releases/latest | jq -r '.tag_name')
          VERSION_STRING=$(echo $LATEST_VERSION | grep -oE "v?([0-9]+\.){2}[0-9]+")
          
          if [ -n "${{ inputs.version_prefix_to_remove }}" ]; then
            VERSION_STRING=$(echo ${LATEST_VERSION:${#PREFIX_TO_REMOVE}})
          fi
          
          ARTIFACT=$(echo ${{ inputs.artifact }} | sed -e 's/VERSION/'$VERSION_STRING'/')
          curl -LO https://github.com/${{ inputs.githubUser }}/${{ inputs.githubRepo }}/releases/download/$LATEST_VERSION/$ARTIFACT
          echo "artifact=$(echo $ARTIFACT | cut -d '.' -f 1)" >> $GITHUB_OUTPUT
          echo "package-name=$ARTIFACT" >> $GITHUB_OUTPUT

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.get-artifact.outputs.artifact }}
          path: ${{ steps.get-artifact.outputs.package-name }}
          retention-days: 1

  commit-and-push:
    runs-on: ubuntu-latest
    needs: get-artifact
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Update Repo From Remote
        run: |
          git fetch origin main
          git rebase origin/main

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.get-artifact.outputs.artifact }}

      - name: Move artifact
        run: |
          ls -R
          mkdir -p ${{ inputs.directory }}
          rm -rf ${{ inputs.directory }}/*
          mv -f ${{ needs.get-artifact.outputs.package-name }} ${{ inputs.directory }}

      - name: Check For Changes
        id: git-check
        run: |
          if [ -z "$(git status --porcelain)" ]; then
            echo "needs-update=false" >> $GITHUB_OUTPUT
          else
            echo "needs-update=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit and Push
        if: steps.git-check.outputs.needs-update == 'true'
        run: |
          git config --global user.name github-actions
          git config --global user.email github-actions@github.com
          git add ${{ inputs.directory }}/
          git commit -m "Updated ${{ needs.get-artifact.outputs.artifact }}"
          git push origin main
          
