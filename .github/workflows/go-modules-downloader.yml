name: Go Modules Downloader

on:
  workflow_call:
    inputs:
      tool:
        required: true
        type: string
      moduleRepo:
        required: true
        type: string

jobs:
  install-tool:
    runs-on: ubuntu-20.04
    env:
      CC: gcc-10
    container:
      image: ubuntu:18.04
    outputs:
      artifact-path: ${{ steps.setup.outputs.artifact-path }}
    
    steps:
      - name: Prepare container
        run: |
          apt-get update
          apt-get install -y software-properties-common
          add-apt-repository -y ppa:ubuntu-toolchain-r/test # For gcc-10.
          add-apt-repository -y ppa:git-core/ppa # For git>=2.18.
          apt-get update
          apt-get install -y git gcc-10
          # Workaround for https://github.com/actions/checkout/issues/766.
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
      
      - name: Checkout repository
        uses: actions/checkout@v3
          
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.20"

      - name: Install Tool
        run: go install ${{ inputs.moduleRepo }}

      - name: Create artifact directory
        id: setup
        run: |
          mkdir -p artifacts
          ARTIFACT_DIR=artifacts
          cp $(go env GOPATH)/bin/${{ inputs.tool }} $ARTIFACT_DIR/
          echo "artifact-path=$ARTIFACT_DIR/${{ inputs.tool }}" >> $GITHUB_OUTPUT

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.tool }}
          path: ${{ steps.setup.outputs.artifact-path }}
          retention-days: 1

  commit-and-push:
    needs: install-tool
    runs-on: ubuntu-latest
    steps:
      - name: Checkout respository
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.tool }}

      - name: Copy tool to gobin
        run: |
          ls -R
          mkdir -p gobin
          mv -f ${{ inputs.tool }} gobin/

      - name: Check for changes
        id: git-check
        run: |
          if [ -z "$(git status --porcelain)" ]; then
            echo "has-changes=false" >> $GITHUB_OUTPUT
          else
            echo "has-changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit and Push
        if: steps.git-check.outputs.has-changes == 'true'
        run: |
          git config --global user.name github-actions
          git config --global user.email github-actions@github.com
          git add gobin/*
          git commit -m "Installed/Updated tool: ${{ inputs.tool }}"
          git push
